apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    config_hash: 9e350abc461801bd85c5e5ccb917be10
  labels:
    app.kubernetes.io/component: logging
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-read
    app.kubernetes.io/part-of: loki
    app.kubernetes.io/version: 2.6.0
  name: loki-read
  namespace: logging
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: logging
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-read
      app.kubernetes.io/part-of: loki
  serviceName: loki-read
  template:
    metadata:
      labels:
        app.kubernetes.io/component: logging
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-read
        app.kubernetes.io/part-of: loki
        app.kubernetes.io/version: 2.6.0
    spec:
      containers:
      - args:
        - -target=read
        - -config.file=/etc/loki/config.yaml
        image: grafana/loki:2.6.0
        imagePullPolicy: IfNotPresent
        name: read
        ports:
        - containerPort: 9095
          name: grpc
        - containerPort: 3100
          name: http
        readinessProbe:
          httpGet:
            path: /ready
            port: 3100
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/loki
          name: config
      securityContext:
        fsGroup: 10001
      serviceAccountName: loki-read
      terminationGracePeriodSeconds: 4800
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: loki-read
      - configMap:
          name: loki
        name: config
